// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using APIMarketplaceApp.Models;

namespace APIMarketplaceApp.Data
{
    public partial class DB_MarketplaceContext : DbContext
    {
        public DB_MarketplaceContext()
        {
        }

        public DB_MarketplaceContext(DbContextOptions<DB_MarketplaceContext> options)
            : base(options)
        {
        }
        public virtual DbSet<Famille> Familles { get; set; }
        public virtual DbSet<Magasin> Magasins { get; set; }
        public virtual DbSet<PrixProduit> PrixProduits { get; set; }
        public virtual DbSet<Produit> Produits { get; set; }
        public virtual DbSet<SousFamille> SousFamilles { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Famille>(entity =>
            {
                entity.HasKey(e => e.IdFamille)
                    .HasName("PK__Famille__C237F48AC29A9740");

                entity.ToTable("Famille");

                entity.Property(e => e.IdFamille)
                    .HasMaxLength(10)
                    .HasColumnName("id_Famille")
                    .IsFixedLength();

                entity.Property(e => e.NomFamille)
                    .IsRequired()
                    .IsUnicode(false)
                    .HasColumnName("Nom_Famille");
            });

            modelBuilder.Entity<Magasin>(entity =>
            {
                entity.HasKey(e => e.IdMagasin)
                    .HasName("PK__Magasin__46EA0C6D5DAD5F20");

                entity.ToTable("Magasin");

                entity.Property(e => e.IdMagasin)
                    .HasMaxLength(10)
                    .HasColumnName("id_magasin")
                    .IsFixedLength();

                entity.Property(e => e.NomMagasin)
                    .IsRequired()
                    .IsUnicode(false)
                    .HasColumnName("Nom_magasin");
            });

            modelBuilder.Entity<PrixProduit>(entity =>
            {
                entity.HasKey(e => e.IdPrix)
                    .HasName("PK__Prix_Pro__0DA3A4BE330DC628");

                entity.ToTable("Prix_Produit");

                entity.Property(e => e.IdPrix)
                    .ValueGeneratedNever()
                    .HasColumnName("id_prix");

                entity.Property(e => e.Date).HasColumnType("datetime");

                entity.Property(e => e.Prix)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("prix");

                entity.Property(e => e.Url)
                    .IsRequired()
                    .HasMaxLength(2500)
                    .IsUnicode(false)
                    .HasColumnName("url");
            });

            modelBuilder.Entity<Produit>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Produit");

                entity.Property(e => e.Description)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.IdMagasin)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("id_magasin")
                    .IsFixedLength();

                entity.Property(e => e.IdPrix).HasColumnName("id_prix");

                entity.Property(e => e.IdSousFamille)
                    .HasMaxLength(100)
                    .HasColumnName("id_sous_famille")
                    .IsFixedLength();

                entity.Property(e => e.Photo)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.Reference)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.Stock)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdMagasinNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.IdMagasin)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Produit__id_maga__2D27B809");

                entity.HasOne(d => d.IdPrixNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.IdPrix)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Produit__id_prix__2C3393D0");

                entity.HasOne(d => d.IdSousFamilleNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.IdSousFamille)
                    .HasConstraintName("FK__Produit__id_sous__300424B4");
            });

            modelBuilder.Entity<SousFamille>(entity =>
            {
                entity.HasKey(e => e.IdSousFamille)
                    .HasName("PK__Sous_Fam__4D940ACD08AFDE04");

                entity.ToTable("Sous_Famille");

                entity.Property(e => e.IdSousFamille)
                    .HasMaxLength(100)
                    .HasColumnName("id_sous_famille")
                    .IsFixedLength();

                entity.Property(e => e.IdFamille)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("id_famille")
                    .IsFixedLength();

                entity.Property(e => e.NomSousFamille)
                    .IsRequired()
                    .IsUnicode(false)
                    .HasColumnName("Nom_sous_famille");

                entity.HasOne(d => d.IdFamilleNavigation)
                    .WithMany(p => p.SousFamilles)
                    .HasForeignKey(d => d.IdFamille)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Sous_Fami__id_fa__2E1BDC42");
            });
            OnModelCreatingGeneratedProcedures(modelBuilder);
            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}